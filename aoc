#!/bin/bash

set -e
set -u


function init {
    if [ -d .venv ]; then
        echo "Already initialised."
        return
    fi

    echo "Creating a new virtual environment using $(python3 --version)"
    python3 -m venv .venv

    echo "Installing aoctk"
    source .venv/bin/activate
    pip install aoctk
    deactivate

    echo "Done."
}


function check_init {
    if [ ! -d .venv ]; then
        echo "Not initialised. Run 'aoc init' first."
        exit 1
    fi
}


function token {
    t=${2}

    echo $t > .token
}


function check_token {
    if [ ! -f .token ]; then
        echo "No token found. Please run 'aoc token <token>'"
        exit 1
    fi
}


function pull {
    year="${2}"
    day="${3}"

    # Check that we have a token
    check_token

    token=$(cat .token)

    # local
    dest="$year/$day"

    # remote
    aoc="https://adventofcode.com"
    challenge="$aoc/$year/day/$day"

    test -d $dest || mkdir -p $dest

    echo "\
# $challenge

from aoctk.input import get_lines


def part_one(data=\"input.txt\"):
    pass


def part_two(data=\"input.txt\"):
    pass\


def test():
    assert part_one(\"test.txt\") is None
    assert part_two(\"test.txt\") is None\
" > $dest/code.py

    curl -s -H "Cookie: session=${token}" $challenge/input > $dest/input.txt

    touch $dest/test.txt
}


function run {
    year="${2}"
    day="${3}"

    check_init

    source .venv/bin/activate
        PYTHONPATH=$year/$day python -c "import code; code.test(); print('Test OK'); print('Part 1:', code.part_one()); print('Part 2:', code.part_two())"
    deactivate
}


function main {
    cmd="$1"

    case $cmd in
        init)
            init
            ;;
        token)
            token $@
            ;;
        pull)
            pull $@
            ;;
        run)
            run $@
            ;;
        *)
            echo "Unknown command: $cmd"
            ;;
    esac
}


main $@
