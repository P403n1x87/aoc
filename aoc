#!/bin/bash

set -e
set -u


function init {
    if [ -d .venv ]; then
        echo "Already initialised."
        return
    fi

    echo "Creating a new virtual environment using $(python3 --version)"
    python3 -m venv .venv

    echo "Installing aoctk"
    source .venv/bin/activate
    pip install ./aoctk
    deactivate

    echo "Done."
}


function check_init {
    if [ ! -d .venv ]; then
        echo "Not initialised. Run 'aoc init' first."
        exit 1
    fi
}


function token {
    t=${2}

    echo $t > .token
}


function check_token {
    if [ ! -f .token ]; then
        echo "No token found. Please run 'aoc token <token>'"
        exit 1
    fi
}


function pull {
    year="${2:-$(date +%Y)}"
    day="${3:-$(date +%-d)}"

    # Check that we have a token
    check_token

    token=$(cat .token)

    # local
    dest="$year/$day"

    # remote
    aoc="https://adventofcode.com"
    challenge="$aoc/$year/day/$day"

    test -d $dest || mkdir -p $dest

    echo "\
# $challenge

from aoctk.input import get_lines


def part_one(data=\"input.txt\"):
    pass


def part_two(data=\"input.txt\"):
    pass\


def test():
    assert part_one(\"test.txt\") is None
    assert part_two(\"test.txt\") is None\
" > $dest/code.py

    curl -s -H "Cookie: session=${token}" $challenge/input > $dest/input.txt

    touch $dest/test.txt
}


function run {
    year="${2:-$(date +%Y)}"
    day="${3:-$(date +%-d)}"

    check_init

    source .venv/bin/activate
        PYTHONPATH=$year/$day python -c "
import code
code.test()
print('Test OK')
from time import monotonic_ns as time

def run_part(n, f):
    start = time()
    result = f()
    end = time()
    print(f'Part {n}\t({(end - start) / 1e6:.3f}ms)\t{result}')

for n, f in [(1, code.part_one), (2, code.part_two)]:
    run_part(n, f)
"
    deactivate
}


function submit {
    part="${2}"
    solution="${3}"
    year="${4:-$(date +%Y)}"
    day="${5:-$(date +%-d)}"

    check_token

    token=$(head -n 1 .token)

    curl -s "https://adventofcode.com/${year}/day/${day}/answer" \
        -H 'authority: adventofcode.com' \
        -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' \
        -H 'accept-language: en-GB,en-US;q=0.9,en;q=0.8' \
        -H 'cache-control: max-age=0' \
        -H 'content-type: application/x-www-form-urlencoded' \
        -H "cookie: session=${token}" \
        -H 'origin: https://adventofcode.com' \
        -H "referer: https://adventofcode.com/${year}/day/${day}" \
        -H 'sec-ch-ua: "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24"' \
        -H 'sec-ch-ua-mobile: ?0' \
        -H 'sec-ch-ua-platform: "macOS"' \
        -H 'sec-fetch-dest: document' \
        -H 'sec-fetch-mode: navigate' \
        -H 'sec-fetch-site: same-origin' \
        -H 'sec-fetch-user: ?1' \
        -H 'upgrade-insecure-requests: 1' \
        -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36' \
        --data-raw "level=${part}&answer=${solution}" \
        --compressed | grep -q "That's the right answer!"
}


function main {
    cmd="$1"

    case $cmd in
        init)
            init
            ;;
        token)
            token $@
            ;;
        pull)
            pull $@
            ;;
        run)
            run $@
            ;;
        submit)
            submit $@
            ;;
        *)
            echo "Unknown command: $cmd"
            ;;
    esac
}


main $@
